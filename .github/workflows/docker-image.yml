name: Docker Build, Publish and Static Analysis

on:
  push:
    branches:
      - main

jobs:
  Flake8:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      working-directory: ${{github.workspace}}/src
      run: |
        pip3 install -r requirements.txt
        pip install flake8
        
    - name: Run Flake8
      run: flake8
        
  SnykTests:
    runs-on: ubuntu-latest
    needs: [Flake8]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Snyk Static analysis step
      - name: Snyk Code Analysis
        working-directory: ${{github.workspace}}/src
        run: |
          pip3 install -r requirements.txt
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_API_TOKEN }}
          snyk test
  SonarCloud:
    runs-on: ubuntu-latest
    needs: [Flake8]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # SonarCloud analysis step
      - name: SonarCloud Analysis
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLUD_TOKEN }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
  DockerBuild:
    runs-on: ubuntu-latest
    needs: [SonarCloud, SnykTests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        env:
         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
         DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mdp-c1:latest ./src
        env:
         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vaskonti/mdp-c1:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/mdp-c1:latest
        env:
         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
